{
  "openapi": "3.0.0",
  "info": {
    "title": "API REST COMMERCE SYSTEM",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "LoginData": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Email del usuario"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario"
          }
        }
      },
      "Registers": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email del usuario"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario"
          },
          "name": {
            "type": "string",
            "description": "Nombre del usuario"
          },
          "rol": {
            "type": "string",
            "description": "Rol del usuario"
          }
        }
      },
      "CreateProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del producto"
          },
          "description": {
            "type": "string",
            "description": "Descripción del producto"
          },
          "price": {
            "type": "integer",
            "description": "Precio del producto"
          },
          "stock": {
            "type": "integer",
            "description": "Cantidad disponible del producto"
          },
          "category": {
            "type": "string",
            "description": "Categoría del producto"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL de la imagen del producto"
          }
        },
        "required": [
          "name",
          "description",
          "price",
          "stock",
          "category",
          "imageUrl"
        ]
      },
      "CreateOrder": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID del usuario que realiza la orden"
          },
          "products": {
            "type": "array",
            "description": "Lista de productos que se incluyen en la orden",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "description": "ID del producto"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Cantidad del producto en la orden"
                }
              },
              "required": ["productId", "quantity"]
            }
          }
        },
        "required": ["userId", "products"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "description": "Crear un usuario",
        "tags": ["Auth"],
        "requestBody": {
          "description": "Insertar datos del usuario",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Registers"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado exitosamente."
          },
          "400": {
            "description": "Error intentando crear un nuevo usuario."
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "Iniciar sesion",
        "tags": ["Auth"],
        "requestBody": {
          "description": "Solicitud de Inicio de sesion",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesion exitoso"
          },
          "401": {
            "description": "Credenciales Invalidas"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "description": "Obtener todos los productos",
        "tags": ["Products"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Obtenemos exitosamente todos los eventos."
          },
          "400": {
            "description": "Generamos un error en caso de que la peticion no se resuelva."
          }
        }
      },
      "post": {
        "description": "Crear un producto",
        "tags": ["Products"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Crear un producto nuevo",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Nuevo evento creado exitosamente."
          },
          "401": {
            "description": "Generamos un error en caso de que la peticion no se resuelva"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del producto",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Obtenemos un producto en especifico",
        "tags": ["Products"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Obtenemos exitosamente el producto."
          },
          "400": {
            "description": "Generamos un error en caso de que la peticion no se resuelva."
          }
        }
      },
      "patch": {
        "description": "Editar producto",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del producto",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Insertar datos del servicio",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Servicio editado exitosamente"
          },
          "400": {
            "description": "Generamos un error en caso de que la peticion no se resuelva"
          }
        }
      },
      "delete": {
        "description": "Eliminar producto",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del producto",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminaste exitosamente el producto."
          },
          "400": {
            "description": "Generamos un error en caso de que la peticion no se resuelva."
          }
        }
      }
    },
    "/api/orders": {
      "get": {
        "description": "Listar órdenes del usuario",
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Obtenemos exitosamente todos las órdenes."
          },
          "400": {
            "description": "Generamos un error en caso de que la peticion no se resuelva."
          }
        }
      },
      "post": {
        "description": "Crear una órden",
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Crear una órden nueva",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Nueva órden creada exitosamente."
          },
          "401": {
            "description": "Generamos un error en caso de que la peticion no se resuelva"
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la órden",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Obtenemos una órden en especifico",
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Obtenemos exitosamente la órden."
          },
          "400": {
            "description": "Generamos un error en caso de que la peticion no se resuelva."
          }
        }
      }
    }
  }
}
